.control.product {
    display: flex;
    max-width: 8%;
    border: 1px solid @color-gray-light01;
    border-radius: 3px;
    font-size: 15px;
    line-height: 20px;
    color: #31251c;
    text-align: center;
    button {
        .lib-button(
            @_button-font-size: 15px,
            @_button-line-height: 20px,
            @_button-width: 12px,
            @_button-color: #31251c,
            @_button-background: @color-white,
            @_button-border: 0px,
            @_button-color-hover: @color-black,
            @_button-background-hover: @color-white,
            @_button-border-hover: 0px,
            @_button-color-active: @color-black,
            @_button-background-active: @color-white,
            @_button-border-active: 0px
        );
        box-shadow: none;
    }
    input[type="number"] {
        .lib-css(border, 0);
        .lib-css(text-align, center);
        &:focus{
            box-shadow: none;
        }
    }
}


input {
    background-color: #f4f4f4;
    &:not([disabled]):focus {
        .lib-css(box-shadow, none);
    }
    // input checkbox
    &[type="checkbox"] {
        .lib-css(visibility, hidden);

        &:checked + label:after {
            .lib-css(content, " ");
            .lib-css(width, 5px);
            .lib-css(height, 8px);
            .lib-css(border-width, 0 2px 2px 0);
            .lib-css(border-style, solid);
            .lib-css(border-color, @color-black);
            .lib-css(transform, rotate(45deg));
            .lib-css(position, absolute);
            .lib-css(left, 0);
            .lib-css(top, 0);
            .lib-css(margin, 4px 4px 4px 8px);
        }
        & + label:before {
            .lib-css(opacity, 0.4);
            .lib-css(border, 1px solid @color-ddd);
            .lib-css(content, " ");
            .lib-css(display, inline-block);
            .lib-css(margin, 0 10px -6px 0);
            .lib-css(padding, 0);
            .lib-css(vertical-align, top);
            .lib-css(width, 20px);
            .lib-css(height, 20px);
        }
    }
    //input radio
    &[type="radio"] {
        .lib-css(visibility, hidden);

        &:checked + label:after {
            .lib-css(background, @color-gray20);
            .lib-css(color, @color-white);
            .lib-css(content, " ");
            .lib-css(text-align, center);
            .lib-css(width, 8px);
            .lib-css(height, 8px);
            .lib-css(position, absolute);
            .lib-css(left, 0);
            .lib-css(margin, 7px);
            .lib-css(border-radius, 50%);
        }
        & + label:before {
            .lib-css(opacity, 0.4);
            .lib-css(border-radius, 50%);
            .lib-css(vertical-align, baseline);
            .lib-css(border, 1px solid @color-ddd);
            .lib-css(content, " ");
            .lib-css(display, inline-block);
            .lib-css(margin, 0 10px -6px 0);
            .lib-css(padding, 0);
            .lib-css(vertical-align, top);
            .lib-css(width, 20px);
            .lib-css(height, 20px);
        }
    }
}
label {
    .lib-css(cursor, pointer);
}

.not-disable {
    & input {
        // input checkbox
        &[type="checkbox"] {
            .lib-css(visibility, hidden);

            &:checked + label:before {
                .lib-css(opacity, 1);
                .lib-css(background, @color-white);
                .lib-css(color, @color-black);
                .lib-css(content, " ");
                .lib-css(text-align, center);
                .lib-css(font-size, 15px);
                .lib-css(border, 1px solid @color-ddd);
            }

            & + label:before {
                .lib-css(opacity, 1);
            }
        }
        //input radio
        &[type="radio"] {
            .lib-css(visibility, hidden);

            &:checked + label:before {
                .lib-css(opacity, 1);
                .lib-css(background, @color-white);
                .lib-css(color, @color-black);
                .lib-css(content, " ");
                .lib-css(text-align, center);
                .lib-css(font-size, 15px);
                .lib-css(border, 1px solid @color-ddd);
                .lib-css(border-radius, 50%);
            }
            & + label:before {
                .lib-css(opacity, 1);
            }
        }
    }
}
.media-width(@extremum, @break) when (@extremum = 'min') and (@break = @screen__m){
    .control.select {
        .lib-css(max-width, 380px);
        input[type="text"], select {
            &:not([disabled]):focus,
            &:focus {
                .lib-css(box-shadow, none);
            }
        }
        select option:checked {
            background-color: @color-gray-light0;
        }
    }
}

& when (@media-common = true) {
     .icon-awesome a{
        text-decoration: none;
        &:nth-child(1)::after {
            content: '\f39e';
            font-family: @font-family-name__la-brands;
            font-size: 24px;
            .lib-css(color, @icon-color);
            .lib-css(cursor, pointer);
        }
        &:nth-child(2)::after {
            content: '\f16d';
            font-family: @font-family-name__la-brands;
            font-size: 24px;
            .lib-css(color, @icon-color);
            .lib-css(cursor, pointer);
        }
        &:hover::after {
            .lib-css(color, @icon-color-hover);
            
        }
         
         
     }
    .icons {
        text-align: center;
        &-image {
            position: relative;
        }
        &-text {
            position: absolute;
            font-family: @font-family__avenir-black;
            font-size: 14px;
            line-height: 15px;
            text-transform: uppercase;
            display: contents;
            font-weight: 700;
            color: @theme__color__primary;
            &:hover {
                color: @theme__color__primary;
            }
        }
    }
}
